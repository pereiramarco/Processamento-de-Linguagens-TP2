
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BIGGER BIGGEREQUAL CALL ELSE EQUAL FLOAT FUNC ID IF IN INT OUT RET SMALLER SMALLEREQUAL THEN WHILEInicio : Variaveis CodigoVariaveis : '{' Declaracoes '}'Declaracoes : Declaracoes DeclaracaoDeclaracoes : Declaracao : Type ID '=' Expr ';'Declaracao : Type ID ';'Type : IDCodigo : Codigo FuncaoCodigo : Codigo InstrucaoCodigo : Funcao : DecFunc '{' ListInstrucao Ret '}'DecFunc : FUNC IDRet : RET Expr ';'ListInstrucao : ListInstrucao InstrucaoListInstrucao : Instrucao : AtribuicaoInstrucao : LeituraInstrucao : EscritaInstrucao : CondicaoInstrucao : CicloLeitura : Var IN ';'Escrita : OUT Var ';'Atribuicao : Var '=' Expr ';'Condicao : IF ExprCond Then ListInstrucao ';'Condicao : IF ExprCond Then ListInstrucao Else ListInstrucao ';'Ciclo : While ExprCond Then '{' ListInstrucao '}'While : WHILEThen : THENElse : ELSEExprCond : ExprCond '&' CondExprCond : ExprCond '|' CondExprCond : CondCond : Expr EQUAL ExprCond : Expr BIGGER ExprCond : Expr BIGGEREQUAL ExprCond : Expr SMALLER ExprCond : Expr SMALLEREQUAL ExprVar : IDExpr : Expr '+' TermExpr : Expr '-' TermExpr : TermTerm : Term '*' FactorTerm : Term '/' FactorTerm : Term '%' FactorTerm : FactorFactor : INTFactor : '-' INTFactor : FLOATFactor : '-' FLOATFactor : IDFactor : '-' IDFactor : CALL ID"
    
_lr_action_items = {'{':([0,8,26,49,64,],[3,25,-12,-28,84,]),'$end':([1,2,4,6,7,9,10,11,12,13,21,44,45,70,86,88,95,96,],[0,-10,-1,-8,-9,-16,-17,-18,-19,-20,-2,-21,-22,-23,-11,-24,-26,-25,]),'FUNC':([2,4,6,7,9,10,11,12,13,21,44,45,70,86,88,95,96,],[-10,14,-8,-9,-16,-17,-18,-19,-20,-2,-21,-22,-23,-11,-24,-26,-25,]),'OUT':([2,4,6,7,9,10,11,12,13,21,25,42,44,45,46,49,68,70,71,84,86,88,89,90,91,94,95,96,],[-10,17,-8,-9,-16,-17,-18,-19,-20,-2,-15,17,-21,-22,-15,-28,-14,-23,17,-15,-11,-24,-15,-29,17,17,-26,-25,]),'IF':([2,4,6,7,9,10,11,12,13,21,25,42,44,45,46,49,68,70,71,84,86,88,89,90,91,94,95,96,],[-10,18,-8,-9,-16,-17,-18,-19,-20,-2,-15,18,-21,-22,-15,-28,-14,-23,18,-15,-11,-24,-15,-29,18,18,-26,-25,]),'ID':([2,3,4,5,6,7,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,27,34,39,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,66,68,69,70,71,84,86,88,89,90,91,92,94,95,96,],[-10,-4,15,24,-8,-9,-16,-17,-18,-19,-20,26,15,38,38,-27,-2,-3,41,-7,-15,38,62,63,15,-21,-22,-15,38,38,-28,38,38,38,38,38,38,38,38,38,38,38,-6,-14,38,-23,15,-15,-11,-24,-15,-29,15,-5,15,-26,-25,]),'WHILE':([2,4,6,7,9,10,11,12,13,21,25,42,44,45,46,49,68,70,71,84,86,88,89,90,91,94,95,96,],[-10,20,-8,-9,-16,-17,-18,-19,-20,-2,-15,20,-21,-22,-15,-28,-14,-23,20,-15,-11,-24,-15,-29,20,20,-26,-25,]),'}':([3,5,9,10,11,12,13,22,44,45,66,67,68,70,84,88,91,92,93,95,96,],[-4,21,-16,-17,-18,-19,-20,-3,-21,-22,-6,86,-14,-23,-15,-24,95,-5,-13,-26,-25,]),'RET':([9,10,11,12,13,25,42,44,45,68,70,88,95,96,],[-16,-17,-18,-19,-20,-15,69,-21,-22,-14,-23,-24,-26,-25,]),';':([9,10,11,12,13,15,28,29,33,35,36,37,38,41,43,44,45,46,49,60,61,62,63,68,70,71,79,80,81,82,83,85,87,88,89,90,94,95,96,],[-16,-17,-18,-19,-20,-38,44,45,-41,-45,-46,-48,-50,66,70,-21,-22,-15,-28,-47,-49,-51,-52,-14,-23,88,-39,-40,-42,-43,-44,92,93,-24,-15,-29,96,-26,-25,]),'ELSE':([9,10,11,12,13,44,45,46,49,68,70,71,88,95,96,],[-16,-17,-18,-19,-20,-21,-22,-15,-28,-14,-23,90,-24,-26,-25,]),'=':([15,16,41,],[-38,27,65,]),'IN':([15,16,],[-38,28,]),'INT':([18,19,20,27,34,47,48,50,51,52,53,54,55,56,57,58,59,65,69,],[36,36,-27,36,60,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'-':([18,19,20,27,32,33,35,36,37,38,43,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,69,74,75,76,77,78,79,80,81,82,83,85,87,],[34,34,-27,34,56,-41,-45,-46,-48,-50,56,34,34,34,34,34,34,34,34,34,34,34,34,-47,-49,-51,-52,34,34,56,56,56,56,56,-39,-40,-42,-43,-44,56,56,]),'FLOAT':([18,19,20,27,34,47,48,50,51,52,53,54,55,56,57,58,59,65,69,],[37,37,-27,37,61,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'CALL':([18,19,20,27,47,48,50,51,52,53,54,55,56,57,58,59,65,69,],[39,39,-27,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'&':([30,31,33,35,36,37,38,40,60,61,62,63,72,73,74,75,76,77,78,79,80,81,82,83,],[47,-32,-41,-45,-46,-48,-50,47,-47,-49,-51,-52,-30,-31,-33,-34,-35,-36,-37,-39,-40,-42,-43,-44,]),'|':([30,31,33,35,36,37,38,40,60,61,62,63,72,73,74,75,76,77,78,79,80,81,82,83,],[48,-32,-41,-45,-46,-48,-50,48,-47,-49,-51,-52,-30,-31,-33,-34,-35,-36,-37,-39,-40,-42,-43,-44,]),'THEN':([30,31,33,35,36,37,38,40,60,61,62,63,72,73,74,75,76,77,78,79,80,81,82,83,],[49,-32,-41,-45,-46,-48,-50,49,-47,-49,-51,-52,-30,-31,-33,-34,-35,-36,-37,-39,-40,-42,-43,-44,]),'EQUAL':([32,33,35,36,37,38,60,61,62,63,79,80,81,82,83,],[50,-41,-45,-46,-48,-50,-47,-49,-51,-52,-39,-40,-42,-43,-44,]),'BIGGER':([32,33,35,36,37,38,60,61,62,63,79,80,81,82,83,],[51,-41,-45,-46,-48,-50,-47,-49,-51,-52,-39,-40,-42,-43,-44,]),'BIGGEREQUAL':([32,33,35,36,37,38,60,61,62,63,79,80,81,82,83,],[52,-41,-45,-46,-48,-50,-47,-49,-51,-52,-39,-40,-42,-43,-44,]),'SMALLER':([32,33,35,36,37,38,60,61,62,63,79,80,81,82,83,],[53,-41,-45,-46,-48,-50,-47,-49,-51,-52,-39,-40,-42,-43,-44,]),'SMALLEREQUAL':([32,33,35,36,37,38,60,61,62,63,79,80,81,82,83,],[54,-41,-45,-46,-48,-50,-47,-49,-51,-52,-39,-40,-42,-43,-44,]),'+':([32,33,35,36,37,38,43,60,61,62,63,74,75,76,77,78,79,80,81,82,83,85,87,],[55,-41,-45,-46,-48,-50,55,-47,-49,-51,-52,55,55,55,55,55,-39,-40,-42,-43,-44,55,55,]),'*':([33,35,36,37,38,60,61,62,63,79,80,81,82,83,],[57,-45,-46,-48,-50,-47,-49,-51,-52,57,57,-42,-43,-44,]),'/':([33,35,36,37,38,60,61,62,63,79,80,81,82,83,],[58,-45,-46,-48,-50,-47,-49,-51,-52,58,58,-42,-43,-44,]),'%':([33,35,36,37,38,60,61,62,63,79,80,81,82,83,],[59,-45,-46,-48,-50,-47,-49,-51,-52,59,59,-42,-43,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Inicio':([0,],[1,]),'Variaveis':([0,],[2,]),'Codigo':([2,],[4,]),'Declaracoes':([3,],[5,]),'Funcao':([4,],[6,]),'Instrucao':([4,42,71,91,94,],[7,68,68,68,68,]),'DecFunc':([4,],[8,]),'Atribuicao':([4,42,71,91,94,],[9,9,9,9,9,]),'Leitura':([4,42,71,91,94,],[10,10,10,10,10,]),'Escrita':([4,42,71,91,94,],[11,11,11,11,11,]),'Condicao':([4,42,71,91,94,],[12,12,12,12,12,]),'Ciclo':([4,42,71,91,94,],[13,13,13,13,13,]),'Var':([4,17,42,71,91,94,],[16,29,16,16,16,16,]),'While':([4,42,71,91,94,],[19,19,19,19,19,]),'Declaracao':([5,],[22,]),'Type':([5,],[23,]),'ExprCond':([18,19,],[30,40,]),'Cond':([18,19,47,48,],[31,31,72,73,]),'Expr':([18,19,27,47,48,50,51,52,53,54,65,69,],[32,32,43,32,32,74,75,76,77,78,85,87,]),'Term':([18,19,27,47,48,50,51,52,53,54,55,56,65,69,],[33,33,33,33,33,33,33,33,33,33,79,80,33,33,]),'Factor':([18,19,27,47,48,50,51,52,53,54,55,56,57,58,59,65,69,],[35,35,35,35,35,35,35,35,35,35,35,35,81,82,83,35,35,]),'ListInstrucao':([25,46,84,89,],[42,71,91,94,]),'Then':([30,40,],[46,64,]),'Ret':([42,],[67,]),'Else':([71,],[89,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Inicio","S'",1,None,None,None),
  ('Inicio -> Variaveis Codigo','Inicio',2,'p_Inicio','interpretador_yacc.py',70),
  ('Variaveis -> { Declaracoes }','Variaveis',3,'p_Variaveis','interpretador_yacc.py',73),
  ('Declaracoes -> Declaracoes Declaracao','Declaracoes',2,'p_Declaracoes','interpretador_yacc.py',76),
  ('Declaracoes -> <empty>','Declaracoes',0,'p_Declaracoes_paragem','interpretador_yacc.py',79),
  ('Declaracao -> Type ID = Expr ;','Declaracao',5,'p_Declaracao','interpretador_yacc.py',83),
  ('Declaracao -> Type ID ;','Declaracao',3,'p_Declaracao_simples','interpretador_yacc.py',95),
  ('Type -> ID','Type',1,'p_Type','interpretador_yacc.py',110),
  ('Codigo -> Codigo Funcao','Codigo',2,'p_Codigo_decFunc','interpretador_yacc.py',120),
  ('Codigo -> Codigo Instrucao','Codigo',2,'p_Codigo_Instrucao','interpretador_yacc.py',123),
  ('Codigo -> <empty>','Codigo',0,'p_Codigo_paragem','interpretador_yacc.py',126),
  ('Funcao -> DecFunc { ListInstrucao Ret }','Funcao',5,'p_Funcao','interpretador_yacc.py',129),
  ('DecFunc -> FUNC ID','DecFunc',2,'p_DecFunc','interpretador_yacc.py',132),
  ('Ret -> RET Expr ;','Ret',3,'p_Ret','interpretador_yacc.py',137),
  ('ListInstrucao -> ListInstrucao Instrucao','ListInstrucao',2,'p_ListInstrucao','interpretador_yacc.py',142),
  ('ListInstrucao -> <empty>','ListInstrucao',0,'p_ListInstrucao_paragem','interpretador_yacc.py',145),
  ('Instrucao -> Atribuicao','Instrucao',1,'p_Instrucao_atribuicao','interpretador_yacc.py',148),
  ('Instrucao -> Leitura','Instrucao',1,'p_Instrucao_reading','interpretador_yacc.py',151),
  ('Instrucao -> Escrita','Instrucao',1,'p_Instrucao_writing','interpretador_yacc.py',154),
  ('Instrucao -> Condicao','Instrucao',1,'p_Instrucao_condicao','interpretador_yacc.py',157),
  ('Instrucao -> Ciclo','Instrucao',1,'p_Instrucao_ciclo','interpretador_yacc.py',160),
  ('Leitura -> Var IN ;','Leitura',3,'p_Leitura','interpretador_yacc.py',163),
  ('Escrita -> OUT Var ;','Escrita',3,'p_Escrita','interpretador_yacc.py',176),
  ('Atribuicao -> Var = Expr ;','Atribuicao',4,'p_Atribuicao','interpretador_yacc.py',186),
  ('Condicao -> IF ExprCond Then ListInstrucao ;','Condicao',5,'p_Condicao_if','interpretador_yacc.py',191),
  ('Condicao -> IF ExprCond Then ListInstrucao Else ListInstrucao ;','Condicao',7,'p_Condicao_else','interpretador_yacc.py',196),
  ('Ciclo -> While ExprCond Then { ListInstrucao }','Ciclo',6,'p_Ciclo','interpretador_yacc.py',201),
  ('While -> WHILE','While',1,'p_While','interpretador_yacc.py',206),
  ('Then -> THEN','Then',1,'p_Then','interpretador_yacc.py',210),
  ('Else -> ELSE','Else',1,'p_Else','interpretador_yacc.py',217),
  ('ExprCond -> ExprCond & Cond','ExprCond',3,'p_ExprCond_and','interpretador_yacc.py',221),
  ('ExprCond -> ExprCond | Cond','ExprCond',3,'p_ExprCond_or','interpretador_yacc.py',225),
  ('ExprCond -> Cond','ExprCond',1,'p_ExprCond_paragem','interpretador_yacc.py',229),
  ('Cond -> Expr EQUAL Expr','Cond',3,'p_Cond_equals','interpretador_yacc.py',232),
  ('Cond -> Expr BIGGER Expr','Cond',3,'p_Cond_bigger','interpretador_yacc.py',236),
  ('Cond -> Expr BIGGEREQUAL Expr','Cond',3,'p_Cond_bigger_equal','interpretador_yacc.py',240),
  ('Cond -> Expr SMALLER Expr','Cond',3,'p_Cond_smaller','interpretador_yacc.py',244),
  ('Cond -> Expr SMALLEREQUAL Expr','Cond',3,'p_Cond_smaller_equal','interpretador_yacc.py',248),
  ('Var -> ID','Var',1,'p_Var','interpretador_yacc.py',252),
  ('Expr -> Expr + Term','Expr',3,'p_Expr_add','interpretador_yacc.py',261),
  ('Expr -> Expr - Term','Expr',3,'p_Expr_sub','interpretador_yacc.py',265),
  ('Expr -> Term','Expr',1,'p_Expr_paragem','interpretador_yacc.py',269),
  ('Term -> Term * Factor','Term',3,'p_Term_mul','interpretador_yacc.py',273),
  ('Term -> Term / Factor','Term',3,'p_Term_div','interpretador_yacc.py',277),
  ('Term -> Term % Factor','Term',3,'p_Term_mod','interpretador_yacc.py',281),
  ('Term -> Factor','Term',1,'p_Term_paragem','interpretador_yacc.py',288),
  ('Factor -> INT','Factor',1,'p_Factor','interpretador_yacc.py',306),
  ('Factor -> - INT','Factor',2,'p_Factor_neg','interpretador_yacc.py',310),
  ('Factor -> FLOAT','Factor',1,'p_FactorF','interpretador_yacc.py',314),
  ('Factor -> - FLOAT','Factor',2,'p_FactorF_neg','interpretador_yacc.py',318),
  ('Factor -> ID','Factor',1,'p_Factor_var','interpretador_yacc.py',322),
  ('Factor -> - ID','Factor',2,'p_Factor_var_neg','interpretador_yacc.py',328),
  ('Factor -> CALL ID','Factor',2,'p_Factor_func','interpretador_yacc.py',338),
]
